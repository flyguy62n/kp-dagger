[project]
name = "KP-Dagger"
dynamic = ["version"]
description = "Network device configuration security analysis tool (Development Version - Not Production Ready)"
readme = "README.md"
license = { text = "Apache-2.0" }
requires-python = ">=3.13"
authors = [
    { name = "Randy", email = "randy@example.com" }
]
keywords = ["network", "security", "configuration", "analysis", "cisco", "fortinet", "paloalto"]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Networking",
    "Topic :: Security",
]
dependencies = [
    "sqlmodel>=0.0.16",
    "duckdb>=0.10.0",
    "click>=8.1.0",
    "pydantic>=2.5.0",
    "httpx>=0.27.0",
    "rich>=13.7.0",
    "openpyxl>=3.1.0",
    "jinja2>=3.1.0",
    "pyyaml>=6.0.0",
    "python-dateutil>=2.8.0",
    "duckdb-engine>=0.17.0",
    "charset-normalizer>=3.4.2",
    "cryptography>=42.0.0",
    "argon2-cffi>=23.0.0",
    "mypy>=1.16.1",
    "dependency-injector>=4.41.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.5",
    "pytest-cov>=5.0.0",
    "pytest-asyncio>=0.21.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "pre-commit>=3.6.0",
]

docs = [
    "mkdocs>=1.6.0",
    "mkdocs-material>=9.5.0",
    "mkdocstrings[python]>=0.26.0",
    "mkdocs-gen-files>=0.5.0",
    "mkdocs-literate-nav>=0.6.0",
    "mkdocs-section-index>=0.3.0",
    "mkdocs-autorefs>=1.0.0",
    "pymdown-extensions>=10.0.0",
    "mkdocs-git-revision-date-localized-plugin>=1.2.0",
    "mkdocs-mermaid2-plugin>=1.2.1",
]

[project.scripts]
kp_dagger = "kp_dagger.cli.main:main"

[project.urls]
Homepage = "https://github.com/flyguy62n/kp-dagger"
Repository = "https://github.com/flyguy62n/kp-dagger.git"
Issues = "https://github.com/flyguy62n/kp-dagger/issues"

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = {"" = "src"}
include-package-data = true

[tool.setuptools.dynamic]
version = {attr = "kp_dagger.__version__"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
pythonpath = "src/"
addopts = [
    "--import-mode=importlib",
    "-v",
    "--cov=src/kp_dagger",
    "--cov-report=html",
    "--cov-report=term-missing"
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "scripts/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]

[dependency-groups]
dev = [
    "pytest>=8.3.5",
    "pytest-cov>=5.0.0",
]

[tool.mypy]
plugins = ["pydantic.mypy", "sqlalchemy.ext.mypy.plugin"]
files = ["src", "tests"]  # Specify the directories or files to check
ignore_missing_imports = true  # Ignore missing imports
disallow_untyped_calls = true  # Disallow calls to functions without type annotations

# TestPyPI for development releases (explicit = true means packages will only 
# be installed from this index if explicitly pinned to it via tool.uv.sources)
[[tool.uv.index]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
publish-url = "https://test.pypi.org/legacy/"
explicit = true

# Production PyPI is the default index (PyPI is included automatically unless 
# another index is marked as default = true)
# No need to explicitly define PyPI unless you want to customize its behavior